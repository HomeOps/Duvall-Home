- alias: update_vent_group_members
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: '/30'
      seconds: 00
  action:
    - service: group.set
      data_template:
        object_id: "all_vents"
        entities: >-
          {%- for light in states['light'] if ( (light.entity_id | lower).endswith('_vent') ) -%}
            {{ light.entity_id }}{% if not loop.last %}, {% endif %}
          {%- endfor -%}
- alias: vent_home
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/1'
      seconds: 00
  action:
    - service: group.set
      data_template:
        object_id: "closed_vents"
        entities: >-
            {% macro get_name(light) -%}
            {{ light.entity_id.replace('_vent','').replace('light.','')}}
            {%- endmacro -%}
            {% macro get_vent_temp(light) -%}
            sensor.{{get_name(light)}}_vent_temperature
            {%- endmacro -%}
            {% macro get_room_temp(light) -%}
            sensor.{{get_name(light)}}_temperature
            {%- endmacro -%}
            {% macro get_close(light) -%}
            {% set target = state_attr("climate.thermostat_hk", "temperature")|float -%}
            {% set hvacMode = state_attr("climate.thermostat_hk", "hvac_action")|lower -%}
            {% if hvacMode == 'cooling' -%}{% set target = target + 0.5 -%}{% endif -%}
            {% if hvacMode == 'heating' -%}{% set target = target - 0.5 -%}{% endif -%}
            {% set vent = states(get_vent_temp(light))|float -%}
            {% set room = states(get_room_temp(light))|float -%}
            {% set requestClose = (((room-target)>0.5 and (vent-room)>0.5) or ((target-room)>0.5 and (room-vent)>0.5)) -%}
            {% set levelInt = state_attr(light.entity_id, "brightness") -%}
            {% if levelInt == None -%}{% set levelInt = 128 -%}{% endif -%}
            {% set level = float(levelInt / 255 * 100) | round(0) | int -%}
            {% if requestClose and level>50 -%}{{light.entity_id}},{%- endif -%}
            {%- endmacro -%}
            {% for light in states['light'] if ( (light.entity_id | lower).endswith('_vent') ) %}
                {{get_close(light)}}
            {%- endfor -%}light.dummy
    - service: cover.set_cover_position
      data_template:
        position: "{{ states('input_number.vent_aperture_min') | int }}"
        entity_id: group.closed_vents
    - service: group.set
      data_template:
        object_id: "open_vents"
        entities: >-
            {% macro get_name(light) -%}
            {{ light.entity_id.replace('_vent','').replace('light.','')}}
            {%- endmacro -%}
            {% macro get_vent_temp(light) -%}
            sensor.{{get_name(light)}}_vent_temperature
            {%- endmacro -%}
            {% macro get_room_temp(light) -%}
            sensor.{{get_name(light)}}_temperature
            {%- endmacro -%}
            {% macro get_open(light) -%}
            {% set target = state_attr("climate.thermostat_hk", "temperature")|float -%}
            {% set hvacMode = state_attr("climate.thermostat_hk", "hvac_action")|lower -%}
            {% if hvacMode == 'cooling' -%}{% set target = target + 0.5 -%}{% endif -%}
            {% if hvacMode == 'heating' -%}{% set target = target - 0.5 -%}{% endif -%}
            {% set vent = states(get_vent_temp(light))|float -%}
            {% set room = states(get_room_temp(light))|float -%}
            {% set requestOpen = not (((room-target)>0.5 and (vent-room)>0.5) or ((target-room)>0.5 and (room-vent)>0.5)) -%}
            {% set level = state_attr(light.entity_id, "current_position") -%}
            {% if level == None -%}{% set level = 50 -%}{% endif -%}
            {% if requestOpen and level<50 -%}{{light.entity_id}},{%- endif -%}
            {%- endmacro -%}
            {% for light in states['cover'] if ( (light.entity_id | lower).endswith('_vent') ) %}
                {{get_open(light)}}
            {%- endfor -%}light.dummy
    - service: cover.set_cover_position
      data_template:
        position: "{{ states('input_number.vent_aperture_max') | int }}"
        entity_id: group.open_vents

